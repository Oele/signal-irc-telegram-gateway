#!/usr/bin/perl -w
use strict;
use CGI::Fast qw/:standard/;
use JSON;
use TOML;
use Text::Unidecode;
use URI::Escape;
use Hermod;

my $ok = '{"ok":true,"result":true}';
open my $fh, '<', "/etc/hermod.toml" or die "error opening configuration $!";
my ($cfg, $e) = from_toml do { local $/; <$fh> };
unless ($cfg) {
    die "Error parsing toml: $e";
}

my $tel = $cfg->{telegram} if defined $cfg->{telegram};
my $irc = $cfg->{irc} if defined $cfg->{irc};
my $mat = $cfg->{matrix} if defined $cfg->{matrix};
my $sig = $cfg->{signal} if defined $cfg->{signal};
my $wha = $cfg->{whatsapp} if defined $cfg->{whatsapp};

my $mm = $cfg->{mattermost};
unless (defined $mm->{intoken} and defined $mm->{channel_id} and defined $mm->{user_id}) {
    print CGI->header(-type => 'application/json');
    print '{"ok": false, "status": 500, "error": "token, channel_id or user_id undefined"}'."\n\n";
    exit;
}
open my $dbg, ">>", $mm->{debug} if defined $mm->{debug};

while (my $cgi = CGI::Fast->new) {
    my $body = (defined $cgi->param('POSTDATA')) ? $cgi->param('POSTDATA') : '{}';
    print $dbg $body if defined $dbg;
    my $dj = decode_json( $body );

    # check intoken, channel and not from me
    if ($dj->{token} eq $mm->{intoken} and $dj->{channel_id} eq $mm->{channel_id} and $dj->{user_id} ne $mm->{user_id}) {

        my @lines = split /\n/, $dj->{text};
        for my $msg (@lines) {
            next unless $msg;

            # send to IRC, split lines in chunks of ~maxmsg size if necessary
            if (defined $irc and length $msg > $cfg->{irc}->{maxmsg}) {
                $msg =~ s/(.{1,$cfg->{irc}->{maxmsg}}\S|\S+)\s+/$1\n/g;
                Hermod::relayToFile("[mm] $dj->{user_name}: $_\n", $irc->{infile}) for split /\n/, $msg;
            } elsif (defined $irc) {
                Hermod::relayToFile("[mm] $dj->{user_name}: $msg\n", $irc->{infile});
            }
        }

        # send to telegram
        Hermod::relay2tel($cfg->{telegram},"[mm] $dj->{user_name}: ".$dj->{text}) if defined $cfg->{telegram};

        # send to matrix, signal, whatsapp
        Hermod::relayToFile("[mm] $dj->{user_name}: $dj->{text}\n", $_) for $mat->{infile}, $sig->{infile}, $wha->{infile};

        if ($dj->{file_ids}) {

            # download or get public link(s)
            my $filemsg;
            for my $id (split /,/,$dj->{file_ids}) {

                if (my $link = Hermod::getmmlink($id,$mm)) {

                    # Relay links to other chats
                    Hermod::relay2tel($cfg->{telegram},"[mm] **$dj->{user_name} sends a file: $link\n");
                    Hermod::relayToFile("[mm] **$dj->{user_name} sends a file: $link\n", $_)
                        for $mat->{infile}, $sig->{infile}, $wha->{infile}, $irc->{infile};
                }
            }
        }
    }

    print $cgi->header(-type => 'application/json');
    print $ok."\n\n";
}

